name: Build YTLite IPA (Optimized)

on:
  push:
    branches:
      - 'dev-test'
  workflow_dispatch:
    inputs:
      ipa_url:
        description: "URL to the decrypted YouTube IPA file"
        required: true
        type: string
      enable_all_tweaks:
        description: "Integrate ALL optional tweaks"
        type: boolean
        default: false
      enable_safari_extension:
        description: "Integrate Open in YouTube (Safari Extension)"
        type: boolean
        default: false
      enable_youpip:
        description: "Integrate YouPiP"
        type: boolean
        default: false
      enable_ytuhd:
        description: "Integrate YTUHD"
        type: boolean
        default: false
      enable_yq:
        description: "Integrate YouQuality"
        type: boolean
        default: false
      enable_ryd:
        description: "Integrate Return YouTube Dislikes"
        type: boolean
        default: false
      enable_demc:
        description: "Integrate DontEatMyContent"
        type: boolean
        default: false
      display_name:
        description: "App Name (Optional)"
        default: "YouTube"
      bundle_id:
        description: "BundleID (Optional)"
        default: "com.google.ios.youtube"

jobs:
  build:
    name: Build ${{ matrix.tweak }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        tweak: ['ytlite', 'youpip', 'ytuhd', 'yq', 'ryd', 'demc', 'safari-ext']
        
    if: |
      (github.event_name == 'push' && matrix.tweak == 'ytlite') ||
      (github.event_name == 'workflow_dispatch' && (
        (matrix.tweak == 'ytlite') ||
        (matrix.tweak == 'youpip' && (github.event.inputs.enable_all_tweaks || github.event.inputs.enable_youpip)) ||
        (matrix.tweak == 'ytuhd' && (github.event.inputs.enable_all_tweaks || github.event.inputs.enable_ytuhd)) ||
        (matrix.tweak == 'yq' && (github.event.inputs.enable_all_tweaks || github.event.inputs.enable_yq)) ||
        (matrix.tweak == 'ryd' && (github.event.inputs.enable_all_tweaks || github.event.inputs.enable_ryd)) ||
        (matrix.tweak == 'demc' && (github.event.inputs.enable_all_tweaks || github.event.inputs.enable_demc)) ||
        (matrix.tweak == 'safari-ext' && github.event.inputs.enable_safari_extension)
      ))

    steps:
      - name: Checkout Source Code (for YTLite only)
        if: matrix.tweak == 'ytlite'
        uses: actions/checkout@v4

      - name: Cache and Setup Theos
        id: theos
        uses: actions/cache@v4
        with:
          path: theos
          key: theos-cache-v1
      - name: Setup Theos and iOS SDK
        if: steps.theos.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 --recursive https://github.com/theos/theos.git
          ./theos/bin/install-sdks 16.5

      - name: Build Tweak
        env:
          THEOS: ${{ github.workspace }}/theos
        run: |
          if [[ "${{ matrix.tweak }}" != "ytlite" && "${{ matrix.tweak }}" != "safari-ext" ]]; then
            git clone --depth=1 https://github.com/PoomSmart/YouTubeHeader.git $THEOS/include/YouTubeHeader
            git clone --depth=1 https://github.com/PoomSmart/PSHeader.git $THEOS/include/PSHeader
          fi
          
          case "${{ matrix.tweak }}" in
            ytlite) make clean package FINALPACKAGE=1 && mv packages/*.deb . ;;
            youpip) git clone --depth=1 https://github.com/PoomSmart/YouPiP.git && cd YouPiP && make clean package FINALPACKAGE=1 && mv packages/*.deb .. ;;
            ytuhd) git clone --depth=1 https://github.com/PoomSmart/YTUHD.git && cd YTUHD && make clean package FINALPACKAGE=1 && mv packages/*.deb .. ;;
            yq) git clone --depth=1 https://github.com/PoomSmart/YouQuality.git && cd YouQuality && make clean package FINALPACKAGE=1 && mv packages/*.deb .. ;;
            ryd) git clone --depth=1 https://github.com/PoomSmart/Return-YouTube-Dislikes.git && cd Return-YouTube-Dislikes && make clean package FINALPACKAGE=1 && mv packages/*.deb .. ;;
            demc) cp -r $THEOS/include/YouTubeHeader $THEOS/include/YTHeaders && git clone --depth=1 --recurse-submodules https://github.com/therealFoxster/DontEatMyContent.git && cd DontEatMyContent && make clean package FINALPACKAGE=1 && mv packages/*.deb .. ;;
            "safari-ext") git clone --depth=1 https://github.com/CokePokes/YoutubeExtensions.git && mv YoutubeExtensions/OpenYoutubeSafariExtension.appex . ;;
          esac

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.tweak }}
          path: |
            *.deb
            OpenYoutubeSafariExtension.appex
          if-no-files-found: ignore

  package:
    name: Package IPA
    needs: build
    runs-on: macos-latest
    if: success() && github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Get Short Git Commit Hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Install Pyzule
        run: pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Download and Validate IPA
        run: |
          wget -q "${{ github.event.inputs.ipa_url }}" -O youtube.ipa
          file_type=$(file --mime-type -b youtube.ipa)
          if [[ "$file_type" != "application/x-ios-app" && "$file_type" != "application/zip" ]]; then
            echo "::error::Validation failed: Downloaded file is not a valid IPA."
            exit 1
          fi

      - name: Download All Built Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Inject Tweaks and Build Final IPA
        run: |
          INJECTION_FILES=$(find artifacts -type f -name "*.deb" -o -type d -name "*.appex")
          if [ -z "$INJECTION_FILES" ]; then
            echo "::error::No tweaks were built or found. Cannot create IPA."
            exit 1
          fi
          echo "Injecting the following files:"
          echo "$INJECTION_FILES"
          pyzule -i youtube.ipa -o "YTLite-${{ steps.vars.outputs.sha_short }}.ipa" -f $INJECTION_FILES -n "${{ github.event.inputs.display_name }}" -b "${{ github.event.inputs.bundle_id }}"

      - name: Upload IPA to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: "YTLite-${{ steps.vars.outputs.sha_short }}.ipa"
          tag_name: "build-${{ github.run_number }}-${{ steps.vars.outputs.sha_short }}"
          name: "Build #${{ github.run_number }} (${{ steps.vars.outputs.sha_short }})"
          body: "Automated IPA build from commit ${{ steps.vars.outputs.sha_short }}."
          draft: true