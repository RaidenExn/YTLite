name: Build YTLite IPA

on:
  workflow_dispatch:
    inputs:
      ipa_url:
        description: "URL to the decrypted YouTube IPA file"
        required: true
        type: string
      # NEW: The "Select All" checkbox
      enable_all_tweaks:
        description: "Integrate ALL tweaks (YouPiP, YTUHD, YQ, RYD, DEMC)"
        type: boolean
        default: false
      enable_safari_extension:
        description: "Integrate Open in YouTube (Safari Extension)"
        type: boolean
        default: false
      enable_youpip:
        description: "Integrate YouPiP"
        type: boolean
        default: false
      enable_ytuhd:
        description: "Integrate YTUHD"
        type: boolean
        default: false
      enable_yq:
        description: "Integrate YouQuality"
        type: boolean
        default: false
      enable_ryd:
        description: "Integrate Return YouTube Dislikes"
        type: boolean
        default: false
      enable_demc:
        description: "Integrate DontEatMyContent"
        type: boolean
        default: false
      display_name:
        description: "App Name (Optional)"
        default: "YouTube"
        required: false
      bundle_id:
        description: "BundleID (Optional)"
        default: "com.google.ios.youtube"
        required: false

jobs:
  build_ipa:
    name: Build IPA
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Your YTLite Source Code
        uses: actions/checkout@v4

      - name: Get Short Git Commit Hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: brew install make ldid

      - name: Cache and Setup Theos
        id: theos
        uses: actions/cache@v4
        with:
          path: theos
          key: theos-cache-v1
      - name: Setup Theos and iOS SDK
        if: steps.theos.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 --recursive https://github.com/theos/theos.git
          ./theos/bin/install-sdks 16.5

      - name: Install Pyzule
        run: pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Download and Validate IPA
        run: |
          wget -q "${{ inputs.ipa_url }}" -O youtube.ipa
          file_type=$(file --mime-type -b youtube.ipa)
          if [[ "$file_type" != "application/x-ios-app" && "$file_type" != "application/zip" ]]; then
            echo "::error::Validation failed: The downloaded file is not a valid IPA. Detected type: $file_type."
            exit 1
          fi

      - name: Build YTLite from Your Source
        run: |
          export THEOS=${{ github.workspace }}/theos
          make clean package FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytlite.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone and Build Optional Tweaks
        run: |
          export THEOS=${{ github.workspace }}/theos
          git clone --depth=1 https://github.com/PoomSmart/YouTubeHeader.git $THEOS/include/YouTubeHeader
          git clone --depth=1 https://github.com/PoomSmart/PSHeader.git $THEOS/include/PSHeader
          # UPDATED: Logic now checks for 'enable_all_tweaks' OR the individual checkbox
          if [ "${{ inputs.enable_all_tweaks || inputs.enable_youpip }}" == "true" ]; then
            git clone --depth=1 https://github.com/PoomSmart/YouPiP.git && cd YouPiP
            make clean package FINALPACKAGE=1 && mv packages/*.deb ${{ github.workspace }}/youpip.deb && cd ..
          fi
          if [ "${{ inputs.enable_all_tweaks || inputs.enable_ytuhd }}" == "true" ]; then
            git clone --depth=1 https://github.com/PoomSmart/YTUHD.git && cd YTUHD
            make clean package FINALPACKAGE=1 && mv packages/*.deb ${{ github.workspace }}/ytuhd.deb && cd ..
          fi
          if [ "${{ inputs.enable_all_tweaks || inputs.enable_yq }}" == "true" ]; then
            git clone --depth=1 https://github.com/PoomSmart/YouQuality.git && cd YouQuality
            make clean package FINALPACKAGE=1 && mv packages/*.deb ${{ github.workspace }}/yq.deb && cd ..
          fi
          if [ "${{ inputs.enable_all_tweaks || inputs.enable_ryd }}" == "true" ]; then
            git clone --depth=1 https://github.com/PoomSmart/Return-YouTube-Dislikes.git && cd Return-YouTube-Dislikes
            make clean package FINALPACKAGE=1 && mv packages/*.deb ${{ github.workspace }}/ryd.deb && cd ..
          fi
          if [ "${{ inputs.enable_all_tweaks || inputs.enable_demc }}" == "true" ]; then
            cp -r $THEOS/include/YouTubeHeader $THEOS/include/YTHeaders
            git clone --depth=1 --recurse-submodules https://github.com/therealFoxster/DontEatMyContent.git && cd DontEatMyContent
            make clean package FINALPACKAGE=1 && mv packages/*.deb ${{ github.workspace }}/demc.deb && cd ..
          fi
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone Optional Safari Extension
        if: ${{ inputs.enable_safari_extension }}
        run: |
          git clone --depth=1 https://github.com/CokePokes/YoutubeExtensions.git
          mv YoutubeExtensions/OpenYoutubeSafariExtension.appex ${{ github.workspace }}/

      - name: Inject Tweaks and Build Final IPA
        run: |
          TWEAKS_TO_INJECT="ytlite.deb"
          for tweak_deb in youpip.deb ytuhd.deb yq.deb ryd.deb demc.deb; do
            if [ -f "$tweak_deb" ]; then
              TWEAKS_TO_INJECT="$TWEAKS_TO_INJECT $tweak_deb"
            fi
          done
          if [ -d "OpenYoutubeSafariExtension.appex" ]; then
            TWEAKS_TO_INJECT="$TWEAKS_TO_INJECT OpenYoutubeSafariExtension.appex"
          fi
          pyzule -i youtube.ipa -o "YTLite-${{ steps.vars.outputs.sha_short }}.ipa" -f $TWEAKS_TO_INJECT -n "${{ inputs.display_name }}" -b "${{ inputs.bundle_id }}"

      - name: Upload IPA to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: "YTLite-${{ steps.vars.outputs.sha_short }}.ipa"
          tag_name: "build-${{ github.run_number }}-${{ steps.vars.outputs.sha_short }}"
          name: "Build #${{ github.run_number }} (${{ steps.vars.outputs.sha_short }})"
          body: "Automated IPA build from commit ${{ steps.vars.outputs.sha_short }}."
          draft: true